@page "/ProductsDetail/{id:int}"


@if (_result?.SingleProduct is null)
{
    <p>Loading...</p>
}
else
{
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-6">
                <img src="data:image/png;base64,@_result.SingleProduct.ThumbnailBase64Image" class="card-img-top img-thumbnail" alt="Product image">
            </div>
            <div class="col-md-6">
                <h1 class="display-4">@_result.SingleProduct.Name</h1>
                <h3>Specifications</h3>
                <ul>
                    <li>Color: @_result.SingleProduct.Color</li>
                    <li>Size: @_result.SingleProduct.Size</li>
                    <li>Weight :@_result.SingleProduct.Weight</li>
                    <li>Price: @_result.SingleProduct.ListPrice</li>
                    <li>Product Number: @_result.SingleProduct.ProductNumber</li>
                    <li>Standard Cost: @_result.SingleProduct.StandardCost</li>
                    <li>EntryDate: @_result.SingleProduct.ModifiedDate.Date</li>
                </ul>
                <a href="/" class="btn btn-primary mt-3">Back to Product List</a>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }

    [Inject] public IGetProductsQuery ProductsQuery { get; set; }

    private IProductsDetailQueryResult? _result;

    protected override async Task OnInitializedAsync()
    {
        var queryResult = await ProductsQuery.ProductsDetailQuery.ExecuteAsync(Id);

        if (queryResult.IsSuccessResult())
            _result = queryResult.Data;
    }

}